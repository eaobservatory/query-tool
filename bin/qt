#!/bin/tcsh -f

limit coredumpsize 0

onintr tidy

cd `dirname $0` 

umask 002

set OTROOT              = /jac_sw/orac3
set JAVA		= java
set baseOTConfigDir	= ${OTROOT}/output/cfg/ot
set qtBinDir            = ./
set qtConfig	        = ../config/qtSystem.conf
set LOGPATH             = ""
set NODEFER		= ""

# 64-bit machines need more memory allocated to them
set MAXMEM = 256m
if( ${MACHTYPE} == x86_64 ) then
        set MAXMEM = 512m
endif

set usage		= "Usage: $0 <telescope> [-options] \n\nwhere telescope is:\n\tukirt\t\tspecifies the UKIRT widget set\n\tjcmt\t\tspecifies the jcmt widget set\n\nand options include:\n\t-config <file>\tspecies the absolute path to the \042file\042 used for this session\n\t-scenario\tspecifies scenario mode (does not depend on drama)\n\n"

set classic = ""
set xdebug = ""
set xnoagent = ""
set xrunjdwptrans = ""
set xbootclasspath = ""
set jCompiler = ""

# set default behaviour to -ql -nosim -noeng for UKIRT 
set tosim = "nosim" 
set toql = "ql" 
set toeng = "noeng" 
set debug = ""
set dramaEnabled = "true"
set scenario = 0
set timeout = "20000"

set VERSION = `git log | head -1 | sed -e "s/commit //g"`

while ($#argv != 0)
        switch ($argv[1])
             case -h:
                printf "${usage}" 
                exit 0
                breaksw
             case -timeout:
                shift
                set timeout = $argv[1]
                shift
                breaksw
             case -jswat:
                shift
                set port = $argv[1]
                set xdebug = "-Xdebug"
                set xnoagent = "-Xnoagent"
                set jCompiler = "-Djava.compiler=NONE"
                set xrunjdwptrans = "-Xrunjdwp:transport=dt_socket,address=${port},server=n,suspend=y"
                echo SM Will be controled by JSWAT!
                set JAVA = /local/java/jdk1.4/bin/java
                shift
                breaksw
            case -jswatr:
                shift
                set port = $argv[1]
                set xdebug = "-Xdebug"
                set xnoagent = "-Xnoagent"
                set jCompiler = "-Djava.compiler=NONE"
                set xrunjdwptrans = "-Xrunjdwp:transport=dt_socket,server=y,suspend=n"
                echo SM Will be controled by JSWAT!
                shift
                breaksw
            case -jdebug:
                set xdebug = "-Xdebug"
                set xnoagent = "-Xnoagent"
                set xrunjdwptrans = "-Xrunjdwp:transport=dt_socket,address=2112,server=n,suspend=y"
                set xbootclasspath = "-Xbootclasspath:/local/java/jdk/jre/lib/rt.jar:/local/java/jdk/lib/tools.jar"
                echo QT Will be controled by JDEBUG!
                shift
                breaksw
            case -noql: 
                set toql = "noql" 
                echo No quick look specified 
                shift 
                breaksw 
            case -ql: 
                set toql = "ql" 
                echo Quick look specified 
                shift 
                breaksw 
            case -nosim: 
                set tosim = "nosim" 
                echo No simulation specified 
                shift 
                breaksw 
            case -sim: 
                set tosim = "sim" 
                echo Full Simulation specified  
                shift 
                breaksw 
            case -simInst: 
                set tosim = "simInst" 
                echo Instrument Simulation specified  
                shift 
                breaksw 
            case -simTel: 
                set tosim = "simTel" 
                echo Telescope Simulation specified  
                shift 
                breaksw 
            case -eng 
                set toeng = "eng" 
                echo "Data to be saved in engingeering directories"
                shift 
                breaksw 
            case -noeng 
                set toeng = "noeng" 
                echo Science observing specified 
                shift 
                breaksw 
            case -logdir
                shift
                set LOGPATH = $argv[1]
                shift
                breaksw
            case -scenario
                set scenario = 1
                shift
                breaksw
            case -config
                shift
                set qtConfig = $argv[1]
                shift
                breaksw
            case -debug
                set debug = true
                echo debug on
                shift
                breaksw
            case ukirt:
		set qtConfig     = ../config/qtSystem.conf.ukirt
                set widgetFile   = ../config/qtUkirtWidget.conf
                set instConfigDir = ${baseOTConfigDir}/ukirt
                set telescope	  = Ukirt
                echo Telescope set to use ukirt widget set
                shift
                breaksw
            case jcmt:
                set qtConfig     = ../config/qtSystem.conf.jcmt
                set widgetFile   = ../config/qtJcmtWidget.conf
                set instConfigDir = ${baseOTConfigDir}/jcmt
                set telescope	  = Jcmt
                echo Telescope set to use jcmt widget set
                shift
                breaksw
            case -jls:
                shift
                set widgetFile   = ../config/qtJcmtLapWidget.conf
                echo Restricting widgets to LAP
                breaksw
            case -lap:
                shift
                set widgetFile   = ../config/qtJcmtLapWidget.conf
                echo Restricting widgets to LAP
                breaksw
            case -nodefer:
                set NODEFER	= -DNODEFER
                echo Ignoring deferred observations from current UT date
                shift
                breaksw
            default:
                echo "No such option "$argv[1]
                printf "${usage}" 
                exit 1
                breaksw
        endsw
end

set utdate = `date -u +%Y%m%d`
set hstdate = `date +%Y%m%d-%H%M%S`
set hsttime = `date +%H%M%S`

set domain = ${SITE}
if (${domain} == "ukirt") then
    set taskname = UKIRT_QT_${hsttime}
else if (${domain} == "jcmt") then
    set taskname = JCMT_QT_${hsttime}
else if (${domain} == "hilo") then
    if ( ${telescope} == "jcmt" ) then
        set taskname="JCMT_QT"
    else
        set taskname="UKIRT_QT"
    endif
endif

if !($?widgetFile) then
    printf "${usage}"
    exit 1
endif

#setenv LOGPATH "/ukirtdata/epics_data/qtLogs/"
# if the user has specified a logdir, write the file into that
# location.  Otherwise set up a default LOGPATH


if ( ${LOGPATH} == "" ) then
    if ( ${domain} ==  "ukirt" || ${domain} == "jcmt" ) then
        set LOGPATH = "/jac_logs/${utdate}/OCSqt_${hstdate}"
    else
        set LOGPATH = "/home/${user}/qtLogs/${utdate}"
        if (! -e ${LOGPATH} ) then
            mkdir ${LOGPATH}
        endif
    endif
endif

mkdir -m 777 -p ${LOGPATH}

#Make the log directory
if (-dwx ${LOGPATH} ) then
    setenv QT_LOG_DIR "${LOGPATH}"
    mkdir -p ${QT_LOG_DIR}
    echo "This QT and (S)equence (M)anager session will be logged in ${QT_LOG_DIR}."
else
    echo ${LOGPATH} does not exist - no log files will be written for this session. 
    setenv QT_LOG_DIR
endif

#Test for scenario mode
if (! ${?IMP_STARTUP} || ${scenario}) then
    set dramaEnabled = "false"
else if (! ${?IMP_SCRATCH} ) then
    setenv IMP_SCRATCH /tmp
    echo "IMP_SCRATCH set to ${IMP_SCRATCH}"
else if (${IMP_SCRATCH} != "/tmp") then	
    echo "*******************************************************"
    echo "IMP_SCRATCH NOT SET TO /tmp"
    echo "Hope you know what you are doing."
    echo "This will probably only work for the simulation system"
    echo "*******************************************************"
endif


if (! ${scenario}) then

    # We want ample IMP_transmitter buffer space
    if( ! ${?IMP_NET_KBYTES} ) then
    	setenv IMP_NET_KBYTES 45000
    endif

    # check whether the CSO task is running
    ditsgetinfo -running CSOMON
    set run = $status

    #If csomon is not running, start it.
    if ($run != 0 ) then
        echo "Starting CSOMON"
        /jac_sw/itsroot/install/oracda/bin/Linux/getcso.pl &
    else
        echo "CSOMON already running - will not start"
    endif
endif

setenv DUL_DIR /jac_sw/drama/CurrentRelease/include/
setenv GIT_DIR /jac_sw/drama/CurrentRelease/include/
setenv DTCL_DIR /jac_sw/drama/CurrentRelease/include/

set CLASSPATH = ../lib/qt.jar
set CLASSPATH = ${CLASSPATH}:../lib/calpahtml.jar
set CLASSPATH = ${CLASSPATH}:../lib/xercesImpl.jar
set CLASSPATH = ${CLASSPATH}:../lib/xmlParserAPIs.jar
set CLASSPATH = ${CLASSPATH}:../lib/mail.jar
set CLASSPATH = ${CLASSPATH}:../lib/activation.jar
set CLASSPATH = ${CLASSPATH}:../lib/soap.jar
set CLASSPATH = ${CLASSPATH}:../lib/log4j-1.2.14.jar
set CLASSPATH = ${CLASSPATH}:../lib/jsamp.jar
set CLASSPATH = ${CLASSPATH}:${OTROOT}/output/lib/ot.jar
set CLASSPATH = ${CLASSPATH}:${OTROOT}/output/lib/gemini.jar
set CLASSPATH = ${CLASSPATH}:${OTROOT}/output/lib/orac.jar
set CLASSPATH = ${CLASSPATH}:${OTROOT}/output/lib/omp.jar
set CLASSPATH = ${CLASSPATH}:../lib/jsky.jar
set CLASSPATH = ${CLASSPATH}:../lib/diva.jar
set CLASSPATH = ${CLASSPATH}:../lib/junit.jar
set CLASSPATH = ${CLASSPATH}:/local/java/jdk/lib/tools.jar
set CLASSPATH = ${CLASSPATH}:/jac_sw/itsroot/install/dcHub/javalib/dcHub.jar
set CLASSPATH = ${CLASSPATH}:/jac_sw/drama/CurrentRelease/javalib
set CLASSPATH = ${CLASSPATH}:/star/starjava/lib/pal/pal.jar

${JAVA} -Xms64m -Xmx${MAXMEM} ${classic} ${xdebug} ${xnoagent} ${xrunjdwptrans} ${xbootclasspath} \
        -Ddebug=${debug} \
        -DDRAMA_ENABLED=${dramaEnabled} \
        -DSIMULATE=${tosim} \
        -DENGINEERING=${toeng} \
        -DQUICKLOOK=${toql} \
        -Dtelescope=${telescope} \
        -DqtConfig=${qtConfig} \
        -DqtBinDir=${qtBinDir} \
        -Dot.cfgdir=${instConfigDir}/ \
        -Dot.resource.cfgdir=${instConfigDir}/ \
        -DwidgetFile=${widgetFile} \
        -DQT_LOG_DIR=${QT_LOG_DIR} \
        -DDOMAIN=${domain} \
        -DOMP \
        -DDCHUB_TIMEOUT=${timeout} \
        -DTASKNAME=${taskname} \
        ${NODEFER} \
        -cp ${CLASSPATH}:${instConfigDir} \
        -Dversion=${VERSION} \
        edu.jach.qt.app.QT

    tidy: 
    onintr - 

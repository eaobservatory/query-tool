#!//usr/local/bin/tcsh

onintr tidy

cd `dirname $0` 

set JAVA		= /local/java/jdk/bin/java
set baseOTConfigDir	= /jac_sw/orac3/OT/install/cfg
set qtConfig	        = ../config/qtSystem.conf

set usage		= "Usage: $0 <telescope> [-h] [-options] \n\nwhere telescope is:\n\tukirt\t\tspecifies the UKIRT widget set\n\tjcmt\t\tspecifies the jcmt widget set\n\nand options include:\n\t-hilo <solaris_host>\t\tspecifies we are running in hilo and sets the solaris host\n\t-config <file>\tspecies the absolute path to the \042file\042 used for this session\n\t-scenario\tspecifies scenario mode (does not depend on drama)\n\n"

set classic = ""
set xdebug = ""
set xnoagent = ""
set xrunjdwptrans = ""
set xbootclasspath = ""
set jCompiler = ""

# set default behaviour to -ql -nosim -noeng for UKIRT 
set tosim = "nosim" 
set toql = "ql" 
set toeng = "noeng" 
set debug = ""
set dramaEnabled = "true"
set scenario = 0
set solHost = "UNDEF"
set timeout = "20000"

while ($#argv != 0)
   switch ($argv[1])
      case -h:
        printf "${usage}" 
        exit 0
        breaksw
      case -timeout:
	shift
	set timeout = $argv[1]
	shift
	breaksw
      case -jswat:
       shift
	set port = $argv[1]
	set xdebug = "-Xdebug"
        set xnoagent = "-Xnoagent"
	set jCompiler = "-Djava.compiler=NONE"
	set xrunjdwptrans = "-Xrunjdwp:transport=dt_socket,address=${port},server=n,suspend=y"
	echo SM Will be controled by JSWAT!
	set JAVA = /local/java/jdk1.4/bin/java
        shift
        breaksw
      case -jswatr:
        shift
	set port = $argv[1]
	set xdebug = "-Xdebug"
        set xnoagent = "-Xnoagent"
	set jCompiler = "-Djava.compiler=NONE"
	set xrunjdwptrans = "-Xrunjdwp:transport=dt_socket,server=y,suspend=n"
	echo SM Will be controled by JSWAT!
        shift
        breaksw
      case -jdebug:
        set xdebug = "-Xdebug"
        set xnoagent = "-Xnoagent"
        set xrunjdwptrans = "-Xrunjdwp:transport=dt_socket,address=2112,server=n,suspend=y"
        set xbootclasspath = "-Xbootclasspath:/local/java/jdk/jre/lib/rt.jar:/local/java/jdk/lib/tools.jar"
	echo QT Will be controled by JDEBUG!
        shift
        breaksw
      case -noql: 
        set toql = "noql" 
        echo No quick look specified 
        shift 
        breaksw 
      case -ql: 
        set toql = "ql" 
        echo Quick look specified 
        shift 
        breaksw 
      case -nosim: 
        set tosim = "nosim" 
        echo No simulation specified 
        shift 
        breaksw 
      case -sim: 
        set tosim = "sim" 
        echo Full Simulation specified  
        shift 
        breaksw 
      case -simInst: 
        set tosim = "simInst" 
        echo Instrument Simulation specified  
        shift 
        breaksw 
      case -simTel: 
        set tosim = "simTel" 
        echo Telescope Simulation specified  
        shift 
        breaksw 
      case -eng 
        set toeng = "eng" 
        echo "Data to be saved in engingeering directories"
        shift 
        breaksw 
      case -noeng 
        set toeng = "noeng" 
        echo Science observing specified 
        shift 
        breaksw 
      case -hilo:
        shift
	set solHost = $argv[1]
        echo Global configs to be used
	echo Solaris host is ${solHost}
        shift
        breaksw
      case -scenario
        set scenario = 1
	set solHost = ""
        shift
        breaksw
      case -config
        shift
	set qtConfig = $argv[1]
        shift
        breaksw
      case -debug
	set debug = true
	echo debug on
        shift
        breaksw
      case ukirt:
        set widgetFile   = ..//config/qtUkirtWidget.conf
	set instConfigDir = ${baseOTConfigDir}/ukirt
	set telescope	  = Ukirt
        echo Telescope set to use ukirt widget set
        shift
        breaksw
      case jcmt:
        set widgetFile   = ../config/qtJcmtWidget.conf
	set instConfigDir = ${baseOTConfigDir}/jcmt
	set telescope	  = Jcmt
        echo Telescope set to use jcmt widget set
        shift
        breaksw
      default:
        echo "No such option "$argv[1]
	printf "${usage}" 
        exit 1
        breaksw
   endsw
end


if (`domainname` == "JAC.ukirt") then
   set solHost = "kiki"
else if (`domainname` == "JAC.jcmt") then
   set solHost = "localhost"
else if (`domainname` == "JAC.Hilo") then
   set solHost = ${solHost}

   if (${solHost} == "UNDEF") then
      echo "\n\nIn Hilo you must specify -hilo <solaris_host> || -scenario"
      printf "${usage}"
      exit 1
   endif
endif

if !($?widgetFile) then
    printf "${usage}"
    exit 1
endif

#setenv LOGPATH "/ukirtdata/epics_data/qtLogs/"
if (${telescope} == "Ukirt" ) then
	setenv LOGPATH "/ukirtdata/epics_data/qtLogs/"
else if (${telescope} == "Jcmt") then
	setenv LOGPATH "/jcmtdata/epics_data/qtLogs/"
else
	setenv LOGPATH "/dev/null/"
endif

#Make the log directory
if (-dwx ${LOGPATH} ) then
   setenv QT_LOG_DIR ${LOGPATH}`date +%Y%m%d-%H%M%S`
   mkdir ${QT_LOG_DIR}
   echo "This QT and (S)equence (M)anager session will be logged in ${QT_LOG_DIR}."
else
   echo ${LOGPATH} does not exist - no log files will be written for this session. 
   setenv QT_LOG_DIR
endif

#Test for scenario mode
if (! ${?IMP_STARTUP} || ${scenario}) then
   set dramaEnabled = "false"

else
   if (! ${?IMP_SCRATCH} ) then
      setenv IMP_SCRATCH /tmp
      echo "IMP_SCRATCH set to ${IMP_SCRATCH}"
   else
      if (${IMP_SCRATCH} != "/tmp") then
         echo "***ERROR: IMP_SCRATCH is set to: ${IMP_SCRATCH} "
         echo "\tIt should be set to /tmp. Fix this and try again."
	 exit 1
      endif
   endif

   # We want ample IMP_transmitter buffer space
   setenv IMP_NET_KBYTES 10000

   # check whether the CSO task is running
   ditsgetinfo -running CSOMON
   set run = $status

   #If csomon is not running && we're on solaris, start it.
   if ($run != 0 ) then
      echo "Starting CSOMON"
      /jac_sw/itsroot/src/oracda/scripts/getcso.pl &
#      /home/dewitt/bin/telmon.pl &
   else
      echo "CSOMON already running - will not start"
   endif
endif

setenv DUL_DIR /jac_sw/drama/drama-v1.4.1/include/
setenv GIT_DIR /jac_sw/drama/drama-v1.4.1/include/
setenv DTCL_DIR /jac_sw/drama/drama-v1.4.1/include/

set CLASSPATH = ../lib/qt.jar:../lib/calpahtml.jar:../lib/xercesImpl.jar:../lib/xmlParserAPIs.jar:../lib/mail.jar:../lib/activation.jar:../lib/soap.jar:/jac_sw/orac3/OT/install/classes:/jac_sw/orac3/GEMINI/install/classes:/jac_sw/itsroot/install/ompSM/javlib/ompSM.jar:/jac_sw/orac3/ORAC/install/classes:/jac_sw/orac3/OMP/install/classes:/jac_sw/orac3/ODB/install/classes:../lib/jsky.jar:../lib/diva.jar:../lib/junit.jar:../icons:/local/java/jdk/lib/tools.jar:/jac_sw/itsroot/install/dcHub/javalib/dcHub.jar:/jac_sw/drama/drama-v1.4.1/javalib

${JAVA} ${classic} ${xdebug} ${xnoagent} ${xrunjdwptrans} ${xbootclasspath} -Ddebug=${debug} -DDRAMA_ENABLED=${dramaEnabled} -DSIMULATE=${tosim} -DENGINEERING=${toeng} -DQUICKLOOK=${toql} -Dtelescope=${telescope} -DSOLARIS_HOST=${solHost} -DDOMAIN=`domainname` -DqtConfig=${qtConfig} -Dot.cfgdir=${instConfigDir}/ -Dot.resource.cfgdir=./ -DwidgetFile=${widgetFile} -DQT_LOG_DIR=${QT_LOG_DIR} -DOMP -DDCHUB_TIMEOUT=${timeout} -cp ${CLASSPATH}:${instConfigDir} edu.jach.qt.app.QT

tidy: 
onintr - 

SOURCEDIR  = ${DEV_ROOT}/src/main
TARGETDIR  = ${DEV_ROOT}/classes
LIBDIR     = ${DEV_ROOT}/lib
BINDIR     = ${DEV_ROOT}/bin
CURRENTDIR = $(CURDIR)

JAVA_HOME = $(shell which java)/../..

EMPTY = 
Space = ${EMPTY} ${EMPTY}


ifdef SOURCES
#PACKAGE = $(shell echo \
#              $(shell echo \
#	        $(shell echo \
#		  $(sort \
#		    $(foreach sourceFile,$(SOURCES),$(shell dirname $(sourceFile)))) \
#               | sed -e 's/\.\///g') \
#              | tr "/" ".") \
#	    | sed -e 's/\. //g')
PACKAGELIST   = ${PACKAGE}
PACKAGESRCDIR = ${SOURCEDIR}/${PACKAGE}
PACKAGETGTDIR = ${TARGETDIR}/${PACKAGE}
else
PACKAGELIST   = ${PACKAGES} ${JAVAPACKAGES}
endif

PACKAGELISTLOOOP = $(patsubst %,${SOURCEDIR}/%/.loop,${PACKAGELIST})

JRE = ${JAVA_HOME}/jre/lib/rt.jar

#
# SOURCE FILES
#
JFILES       = $(filter %.java, $(SOURCES))
MANIFESTFILE = ${PACKAGESRCDIR}/Manifest
SRCFILES     = $(JFILES:%.java= ${PACKAGESRCDIR}/%.java)

#
# Target Files
#
CLASSFILES = $(JFILES:%.java= ${PACKAGETGTDIR}/%.class)
CLASSFILESREL = $(JFILES:%.java= ${PACKAGE}/%.class)

THIRDPARTYJARSTMP = $(patsubst %,${LIBDIR}/%,${JAVALIBRARIES})
THIRDPARTYJARS    = $(subst $(Space),:,${THIRDPARTYJARSTMP})

EXTERNALCLASSAPTH = $(subst $(Space),:,${EXTERNALCLASSES})

JAVAPACKAGENAME = $(subst /,.,${PACKAGE})
#JARFILES        = ${LIBDIR}/$(subst /,,${PACKAGE}).jar
JARFILES         = ${LIBDIR}/${JAVALIB}
JARSRCS          = ${LIBDIR}/${JAVASRCLIB}

CLASSPATH = ${JRE}:${TARGETDIR}:${THIRDPARTYJARS}:${EXTERNALCLASSAPTH}
JAVAPACKAGENAMES = $(subst /,.,${JAVAPACKAGES})

#
# Additonal tools
#
CP = cp
RM = \rm -rf
MAKEDIR = mkdir -p
JAVAC     = $(shell which javac)
JAR       = $(shell which jar)
JARSIGNER = $(shell which jarsigner)
JAVA      = $(shell which java)

JAVAC_FLAGS = \
	-target 1.6 \
	-d ${TARGETDIR} \
	-classpath ${CLASSPATH} \
	-sourcepath ${SOURCEDIR} \
	-g
#MAKEOPTIONS = -s

#
#RULES
#
default: build

%.loop:
	${MAKE} ${MAKEOPTIONS} -C $(subst .loop,,$@) _${MAKECMDGOALS}all

#Create the target directory
$(PACKAGETGTDIR):
	${MAKEDIR} $@


#.java->.class
$(PACKAGETGTDIR)/%.class: $(PACKAGESRCDIR)/%.java
	echo $@
	${JAVAC} ${JAVAC_FLAGS} $<

%.class : $(PACKAGESRCDIR)/%.java
	echo ${PACKAGE}
	${MAKE} ${MAKEOPTIONS}  $(PACKAGETGTDIR)/$@

#.class->.jar
${LIBDIR}/%.jar: ${CLASSFILES}
	cd ${TARGETDIR}; ${JAR} -cf $@ ${CLASSFILESREL}

%.jar: ${CLASSFILES}
	${MAKE} ${MAKEOPTIONS} ${LIBDIR}/$@

build: ${PACKAGELISTLOOOP}
	chmod -R g+w config
	echo Done.

_all:_buildall

_buildall: \
	${PACKAGETGTDIR} \
	${CLASSFILES} \
	${JARFILES} \
	${JARSRCS}

clean: ${PACKAGELISTLOOOP}
	@echo Clean.

_cleanall:
	${RM} ${PACKAGETGTDIR}/* \
	${JARFILES} ${LIBDIR}/${JAVALIB} \
	${JARSRCS} ${LIBDIR}/${JAVASRCLIB}

${JARFILES}:${CLASSFILES}
	${JAR} cf $@ -C ${TARGETDIR} .

${JARSRCS}:${CLASSFILES}
	${JAR} cf $@ -C ${SOURCEDIR} .

jar: ${JARFILES}

jarsign: ${JARFILES}
	${JARSIGNER} -keystore QT ${JARFILE} myself

test: ${PACKAGELISTLOOOP}

_testall:
	echo ${JARFILES}
